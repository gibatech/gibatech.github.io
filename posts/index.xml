<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on GibaTech</title>
    <link>https://gibatech.lptn.com.br/posts/</link>
    <description>Recent content in Posts on GibaTech</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 03 Nov 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://gibatech.lptn.com.br/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Publicação do Guia Frontend</title>
      <link>https://gibatech.lptn.com.br/posts/novidades/guia-frontend/</link>
      <pubDate>Thu, 03 Nov 2022 00:00:00 +0000</pubDate>
      
      <guid>https://gibatech.lptn.com.br/posts/novidades/guia-frontend/</guid>
      <description>Passando para comunicar que incrementamos o Guia! A partir de agora temos uma seção Frontend especialmente preparada para você que está começando os estudos e está tentando entender onde se encaixa cada uma das tecnologias!
Acesse o Guia Frontend e bons estudos!</description>
    </item>
    
    <item>
      <title>Criando sistemas legados com o framework da moda</title>
      <link>https://gibatech.lptn.com.br/posts/codigo/criando-sistemas-legados-com-o-framework-da-moda/</link>
      <pubDate>Sun, 22 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gibatech.lptn.com.br/posts/codigo/criando-sistemas-legados-com-o-framework-da-moda/</guid>
      <description>Não é um assunto necessariamente recente, porém restam controvérsias e, sem dúvidas, ainda cabe uma opinião.
Legados não são ruins. Ruins são as gambiarras, a ausência de testes e de boas práticas de desenvolvimento. Colocar a mesma equipe que desastrosamente sustenta um legado para criar uma nova API fresquinha, com o último framework da moda é potencializar as chances de criação de código ruim, frequentemente chamado de legado.
Também incorro no erro de chamar de construção de novos legados quando vejo códigos escritos de qualquer forma.</description>
    </item>
    
    <item>
      <title>Você está organizando e nomeando seu código corretamente?</title>
      <link>https://gibatech.lptn.com.br/posts/codigo/voce-esta-organizando-e-nomeando-seu-codigo-corretamente/</link>
      <pubDate>Tue, 21 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gibatech.lptn.com.br/posts/codigo/voce-esta-organizando-e-nomeando-seu-codigo-corretamente/</guid>
      <description>Fala-se sobre Código Limpo há algum tempo, sobre funcionalidades que melhoram a legibilidade do código e bibliotecas que agilizam e deixam o código menor e, às vezes, melhor. Mas há questões bem mais fundamentais que não podem ser esquecidas ou despriorizadas em relação àqueles assuntos mais populares, entre eles, a nomenclatura de tudo o que está sendo escrito.
Quando precisamos realizar alterações em um sistema já desenvolvido, mas desconhecido, temos a necessidade de avaliar, como um todo, quais são suas funcionalidades.</description>
    </item>
    
    <item>
      <title>Java: Ambiente de desenvolvimento</title>
      <link>https://gibatech.lptn.com.br/posts/ferramentas/instalacao-ferramentas/</link>
      <pubDate>Fri, 10 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gibatech.lptn.com.br/posts/ferramentas/instalacao-ferramentas/</guid>
      <description>As ferramentas descritas aqui são base para o desenvolvimento Java e podem ser obtidas gratuitamente (legalmente) através dos links disponibilizados
Intellij Link: https://www.jetbrains.com/idea/download/
Acesse a URL e faça download da versão Community para seu sistema operacional. Ele funciona da mesma forma no Linux, Mac ou Windows.
Java Link: https://www.java.com/pt_BR/download/
Acesse a URL e faça download para seu sistema.
Há uma alternativa que pode ser utilizada sem problemas não vinculada à Oracle: O OpenJDK.</description>
    </item>
    
    <item>
      <title>Automação de Build</title>
      <link>https://gibatech.lptn.com.br/posts/ferramentas/automacao-build/</link>
      <pubDate>Sun, 29 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://gibatech.lptn.com.br/posts/ferramentas/automacao-build/</guid>
      <description>Introdução Neste tópico vamos falar sobre as ferramentas que normalmente são utilizadas em aplicações Java para tarefas rotineiras de build, como compilação, testes e cobertura, empacotamento, publicação&amp;hellip;
As mais conhecidas ferramentas para esta finalidade são o Gradle e o Maven.
Glossário Artefato: no contexto deste artigo, para o Java, um Artefato corresponde a uma biblioteca que é compilada a partir de outro projeto Java, resultando um arquivo de extensão JAR. Classpath: no contexto deste artigo, para o Java, o classpath é o conjunto de recursos necessários para a execução da aplicação.</description>
    </item>
    
    <item>
      <title>Ferramentas de Desenvolvimento</title>
      <link>https://gibatech.lptn.com.br/posts/ferramentas/dev-tools-java/</link>
      <pubDate>Tue, 25 Dec 2018 15:24:38 -0200</pubDate>
      
      <guid>https://gibatech.lptn.com.br/posts/ferramentas/dev-tools-java/</guid>
      <description>Desenvolvimento JAVA em ambiente Linux: https://sdkman.io/ Permite instalar e alternar facilmente entre diferentes versões de várias ferramentas. Entre elas: Gradle, Grails, Groovy, Java, Kotlin, Maven, Scala, Spring Boot.
Ele baixa os pacotes e deixa configuradas as variáveis de ambiente, inclusive deixando os binários no PATH para serem executados diretamente, como se fosse uma instalação diretamente no sistema principal.</description>
    </item>
    
  </channel>
</rss>
